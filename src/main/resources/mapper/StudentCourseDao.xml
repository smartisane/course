<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yimin.course.dao.StudentCourseDao">

    <resultMap type="com.yimin.course.entity.StudentCourse" id="StudentCourseMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="StudentCourseMap">
        select id,
               student_id,
               course_id
        from course.t_student_course
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="StudentCourseMap">
        select
        id, student_id, course_id
        from course.t_student_course
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from course.t_student_course
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
        </where>
    </select>
    <select id="selectByStudentAndCourse" resultMap="StudentCourseMap">
        select *
        from course.t_student_course
        where student_id = #{studentId}
          and course_id = #{courseId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into course.t_student_course(student_id, course_id)
        values (#{studentId}, #{courseId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course.t_student_course(student_id, course_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId}, #{entity.courseId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course.t_student_course(student_id, course_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId}, #{entity.courseId})
        </foreach>
        on duplicate key update
        student_id = values(student_id),
        course_id = values(course_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update course.t_student_course
        <set>
            <if test="studentId != null">
                student_id = #{studentId},
            </if>
            <if test="courseId != null">
                course_id = #{courseId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from course.t_student_course
        where id = #{id}
    </delete>

    <delete id="deleteByStudentAndCourse">
        delete from course.t_student_course
        where course_id = #{courseId} and student_id = #{studentId}
    </delete>

</mapper>

